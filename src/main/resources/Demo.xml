<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.owl.dao.OwlUserMapper">
    <resultMap id="BaseResultMap" type="com.owl.Demo">
        <!-- 请添加所需要的属性-->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="is_ban" property="isBan" jdbcType="BIT"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        -- 请添加所需要的属性
        id,
        is_ban, status, create_time, update_time
    </sql>
    <sql id="Table_Name">
        -- 请修改表名
        owl_demo
    </sql>

    <insert id="insertSelective" parameterType="com.owl.Demo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert into <include refid="Table_Name"/>
        -- 请更改指定的列属性
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="isBan != null">
                is_ban,
            </if>
        </trim>
        -- 请更改指定的列属性值
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="isBan != null">
                #{isBan,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <!-- 请添加所需要的属性-->
    <insert id="insertList">
        insert into <include refid="Table_Name"/> (
        id,
        is_ban, status, create_time, update_time)
        values
        <foreach collection="list" item="model" separator=",">
            (#{model.id,jdbcType=BIGINT},
            #{model.isBan,jdbcType=BIT},#{model.status,jdbcType=BIT} , null , null)
        </foreach>
    </insert>

    <update id="deleteByIdList">
        update <include refid="Table_Name"/>
        set status=false,update_time = NULL
        WHERE id IN
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <update id="deleteBySelective">
        update <include refid="Table_Name"/>
        set status=false,update_time = NULL
        <trim prefix="where" suffixOverrides="and">
            <choose>
                <when test="id != null">
                    id = #{id}
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </trim>
    </update>


    <update id="banOrLeave">
        UPDATE <include refid="Table_Name"/>
        SET is_ban = #{isBan}
        WHERE id IN
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            <if test="id != null">
                #{id}
            </if>
        </foreach>
    </update>

    <update id="updateBySelective">
        update <include refid="Table_Name"/>
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            update_time = NULL
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="listAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from <include refid="Table_Name"/>
        <trim prefix="where" suffixOverrides="and">
            <if test="null != name">
                (name like CONCAT(CONCAT('%',#{name}),'%'))
                AND
            </if>
            <if test="null != status">
                status = #{status}
            </if>
        </trim>
    </select>

    <select id="countSumByCondition" resultType="java.lang.Integer">
        select count(id) from
        <include refid="Table_Name"/>
        <trim prefix="where" suffixOverrides="and">
            <if test="null != model">
                <if test="null != model.name">
                    (name like CONCAT(CONCAT('%',#{model.name}),'%'))
                    AND
                </if>
                <if test="null != model.status">
                    status = #{model.status}
                </if>
            </if>
        </trim>
    </select>

    <select id="listByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from <include refid="Table_Name"/>
        <trim prefix="where" suffixOverrides="and">
            <if test="null != model">
                <if test="null != model.name">
                    (name like CONCAT(CONCAT('%',#{model.name}),'%'))
                    AND
                </if>
                <if test="null != model.status">
                    status = #{model.status}
                </if>
            </if>
        </trim>
        ORDER BY CONVERT(name using gbk) ASC
        limit #{upLimit},#{rows}
    </select>
</mapper>